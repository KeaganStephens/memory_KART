from gpiozero import LED, Button, Buzzer
import random
import time
 

leds = [LED(17), LED(18), LED(27), LED(22), LED(23)]  # 5 LEDs
buttons = [Button(5), Button(6), Button(13), Button(19), Button(26), Button(12)]  # 6 buttons
buzzer = Buzzer(24)  # Buzzer GPIO pin
 
morse_code_dict = {
    'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.',
    'F': '..-.', 'G': '--.', 'H': '....', 'I': '..', 'J': '.---',
    'K': '-.-', 'L': '.-..', 'M': '--', 'N': '-.', 'O': '---',
    'P': '.--.', 'Q': '--.-', 'R': '.-.', 'S': '...', 'T': '-',
    'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-', 'Y': '-.--',
    'Z': '--..',
    '0': '-----', '1': '.----', '2': '..---', '3': '...--',
    '4': '....-', '5': '.....', '6': '-....', '7': '--...',
    '8': '---..', '9': '----.',
    ' ': ' ',
}
 
def blink_morse_code(message):
 
    for char in message:
        if char in morse_code_dict:
            code = morse_code_dict[char]
            for symbol in code:
                if symbol == '.':
                    
                    buzzer.on()
                    time.sleep(0.2)
                    
                    buzzer.off()
                    time.sleep(0.2)
                elif symbol == '-':
                   
                    buzzer.on()
                    time.sleep(0.5)
                    
                    buzzer.off()
                    time.sleep(0.2)
        else:
            time.sleep(1)  # Pause for a second for spaces
 
game_over = False
wait = True
rounds = 5
index = 0
allowed = False
 
def play_sequence(sequence, speed): #the order I want the light to display
    for color in sequence:
        leds[color].on()
        # buzzer.on()
        time.sleep(0.5 - speed)
        leds[color].off()
        # buzzer.off()
        time.sleep(0.2)
 
def colourSequence(lenOfSequence):
    return [random.randint(0, 4) for _ in range(lenOfSequence)]
 
def checkIfCorrect(button_index):
    global index
    global allowed
    global wait
    global game_over
 
    if allowed:
        print(button_index)
        play_sequence([button_index], 0.1)
                    #    ([button_index] / 2) / 10)
        if button_index == index:
            # print('jip')
            pass
        else:
            # print("nope")
            game_over = True
    wait = False
    allowed = False
 
buttons[0].when_pressed = lambda: checkIfCorrect(0)
buttons[1].when_pressed = lambda: checkIfCorrect(1)
buttons[2].when_pressed = lambda: checkIfCorrect(2)
buttons[3].when_pressed = lambda: checkIfCorrect(3)
buttons[4].when_pressed = lambda: checkIfCorrect(4)
    
while True:
    print("PRESS START")
 
    buttons[5].wait_for_press()
    time.sleep(1)
 
    print("------------------------STARTING NEW GAME------------------------")
    
    score = 0
 
    for level in range(1, rounds + 1):
 
        blink_morse_code(str(level))
 
        sequence = colourSequence(level)
        print(sequence)
        play_sequence(sequence,(rounds / 1.5) / 10)
 
        for i in range(len(sequence)):
            index = sequence[i]
            wait = True
            allowed = True
            while wait:
                pass
            if game_over:
                break
            score += 1
 
        if game_over:
            break
 
        time.sleep(1)
    
    print('-------')
    print(score)
    print(rounds)
    
    if score >= rounds :
        print('-----------------------------You Won-----------------------------')
        blink_morse_code('You Won')
    else:
        print('-----------------------------You Lost----------------------------')
        blink_morse_code('You Lost')
 
    game_over = False
